// <auto-generated />

using SkServ.Model;
using System.Collections.ObjectModel;

namespace SkServ.Utils
{
    public partial class ApiResponse
    {
		/// <summary>
        /// Преобразовать из ApiResponse
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator DataDict(ApiResponse response)
		{
            return response?._token == null || !response._token.HasValues ? null :  DataDict.FromJson(response);
        }

		/// <summary>
        /// Преобразовать из ApiResponse
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator Collection<DataDict>(ApiResponse response)
        {
            return response.ToCollectionOf<DataDict>(a => a);
        }

		/// <summary>
        /// Преобразовать из ApiResponse
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator LicenseInfo(ApiResponse response)
		{
            return response?._token == null || !response._token.HasValues ? null :  LicenseInfo.FromJson(response);
        }

		/// <summary>
        /// Преобразовать из ApiResponse
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator Collection<LicenseInfo>(ApiResponse response)
        {
            return response.ToCollectionOf<LicenseInfo>(a => a);
        }

		/// <summary>
        /// Преобразовать из ApiResponse
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator NoticeInfo(ApiResponse response)
		{
            return response?._token == null || !response._token.HasValues ? null :  NoticeInfo.FromJson(response);
        }

		/// <summary>
        /// Преобразовать из ApiResponse
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator Collection<NoticeInfo>(ApiResponse response)
        {
            return response.ToCollectionOf<NoticeInfo>(a => a);
        }

		/// <summary>
        /// Преобразовать из ApiResponse
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator UpdateInfo(ApiResponse response)
		{
            return response?._token == null || !response._token.HasValues ? null :  UpdateInfo.FromJson(response);
        }

		/// <summary>
        /// Преобразовать из ApiResponse
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator Collection<UpdateInfo>(ApiResponse response)
        {
            return response.ToCollectionOf<UpdateInfo>(a => a);
        }


	}
}