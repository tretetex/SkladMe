﻿<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ output extension=".cs" #>
// <auto-generated />

using SkServ.Model;
using SkServ.Model.RequestParams;
using System.Collections.ObjectModel;

namespace SkServ.Utils
{
    public partial class ApiResponse
    {
<#
	var path = Path.Combine(Directory.GetParent(Host.ResolvePath("")).ToString(), "Model");
	var files = Directory.GetFiles(path, "*.cs", SearchOption.AllDirectories).ToList();

	var types = new List<string>();

	foreach (var file in files)
	{
		var text = File.ReadAllText(file);
		var pattern = @"static (\w+) FromJson\(ApiResponse [a-zA-Z]*?\)";

		var matches = Regex.Matches(text, pattern, RegexOptions.Multiline);

		foreach (var match in matches)
		{
			var type = Regex.Replace(match.ToString(), pattern, @"$1", RegexOptions.Multiline);
			types.Add(type);
		}
	}

	foreach (var type in types.OrderBy(s => s))
		{
		if (type == "Coordinates")
			continue;
#>
		/// <summary>
        /// Преобразовать из ApiResponse
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator <#= type #>(ApiResponse response)
		{
            return response?._token == null || !response._token.HasValues ? null :  <#= type #>.FromJson(response);
        }

		/// <summary>
        /// Преобразовать из ApiResponse
        /// </summary>
        /// <param name="response">Ответ.</param>
        /// <returns>
        /// Результат преобразования.
        /// </returns>
		public static implicit operator Collection<<#= type #>>(ApiResponse response)
        {
            return response.ToCollectionOf<<#= type #>>(a => a);
        }

<# } #>

	}
}